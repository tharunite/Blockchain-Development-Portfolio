{
	"id": "457dc07c5bfa3b8eaa499c2f8a9dbd85",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"Bones-of-Bitcoin/contracts/conditional/hard.sol": {
				"content": "//Insurance Claim\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract Insurance{\r\n    function claim(uint delayHours,bool isVIP,uint dayAfterFlight) pure public returns(uint,string memory){\r\n        if (delayHours <= 3) {\r\n            return (0, \"No payout - Delay too short\");\r\n        }\r\n\r\n        if (dayAfterFlight > 7) {\r\n            return (0, \"Claim invalid - submitted too late\");\r\n        }\r\n        uint payoutPercent;\r\n        string memory status;\r\n        \r\n        if(delayHours < 6){\r\n            payoutPercent=25;\r\n            status=\"Approved\";\r\n        }\r\n        else if (delayHours<12){\r\n            payoutPercent=50;\r\n            status=\"Approved\";\r\n        }\r\n        else{\r\n            payoutPercent=100;\r\n            status=\"Approved\";\r\n        }\r\n\r\n        if(isVIP && payoutPercent!=0 ){\r\n            payoutPercent+=10;\r\n            if(payoutPercent>110){\r\n                payoutPercent=110;\r\n            }\r\n            status=string.concat(status,\" - VIP bonus applied\");\r\n        }\r\n        return(payoutPercent,status);\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"Bones-of-Bitcoin/contracts/conditional/hard.sol": {
				"Insurance": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "delayHours",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isVIP",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "dayAfterFlight",
									"type": "uint256"
								}
							],
							"name": "claim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":79:1076  contract Insurance{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":79:1076  contract Insurance{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x2d91e458\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":104:1073  function claim(uint delayHours,bool isVIP,uint dayAfterFlight) pure public returns(uint,string memory){... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap3\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":187:191  uint */\n      0x00\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":192:205  string memory */\n      0x60\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":235:236  3 */\n      0x03\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":221:231  delayHours */\n      dup6\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":221:236  delayHours <= 3 */\n      gt\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":217:306  if (delayHours <= 3) {... */\n      tag_11\n      jumpi\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":261:262  0 */\n      0x00\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":253:294  return (0, \"No payout - Delay too short\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      0x4e6f207061796f7574202d2044656c617920746f6f2073686f72740000000000\n      dup2\n      mstore\n      pop\n      swap2\n      pop\n      swap2\n      pop\n      jump(tag_10)\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":217:306  if (delayHours <= 3) {... */\n    tag_11:\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":339:340  7 */\n      0x07\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":322:336  dayAfterFlight */\n      dup4\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":322:340  dayAfterFlight > 7 */\n      gt\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":318:417  if (dayAfterFlight > 7) {... */\n      iszero\n      tag_12\n      jumpi\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":365:366  0 */\n      0x00\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":357:405  return (0, \"Claim invalid - submitted too late\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      data_dd0206810208551d23409d8d0159d19eb3d3a8321c02d36157d0c73845271dd0\n      0x22\n      swap2\n      codecopy\n      swap2\n      pop\n      swap2\n      pop\n      jump(tag_10)\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":318:417  if (dayAfterFlight > 7) {... */\n    tag_12:\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":427:445  uint payoutPercent */\n      0x00\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":456:476  string memory status */\n      0x60\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":513:514  6 */\n      0x06\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":500:510  delayHours */\n      dup8\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":500:514  delayHours < 6 */\n      lt\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":497:788  if(delayHours < 6){... */\n      iszero\n      tag_13\n      jumpi\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":544:546  25 */\n      0x19\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":530:546  payoutPercent=25 */\n      swap2\n      pop\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":561:578  status=\"Approved\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x08\n      dup2\n      mstore\n      0x20\n      add\n      0x417070726f766564000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":497:788  if(delayHours < 6){... */\n      jump(tag_14)\n    tag_13:\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":620:622  12 */\n      0x0c\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":609:619  delayHours */\n      dup8\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":609:622  delayHours<12 */\n      lt\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":605:788  if (delayHours<12){... */\n      iszero\n      tag_15\n      jumpi\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":652:654  50 */\n      0x32\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":638:654  payoutPercent=50 */\n      swap2\n      pop\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":669:686  status=\"Approved\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x08\n      dup2\n      mstore\n      0x20\n      add\n      0x417070726f766564000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":605:788  if (delayHours<12){... */\n      jump(tag_16)\n    tag_15:\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":741:744  100 */\n      0x64\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":727:744  payoutPercent=100 */\n      swap2\n      pop\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":759:776  status=\"Approved\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x08\n      dup2\n      mstore\n      0x20\n      add\n      0x417070726f766564000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":605:788  if (delayHours<12){... */\n    tag_16:\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":497:788  if(delayHours < 6){... */\n    tag_14:\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":803:808  isVIP */\n      dup6\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":803:828  isVIP && payoutPercent!=0 */\n      dup1\n      iszero\n      tag_17\n      jumpi\n      pop\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":827:828  0 */\n      0x00\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":812:825  payoutPercent */\n      dup3\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":812:828  payoutPercent!=0 */\n      eq\n      iszero\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":803:828  isVIP && payoutPercent!=0 */\n    tag_17:\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":800:1027  if(isVIP && payoutPercent!=0 ){... */\n      iszero\n      tag_18\n      jumpi\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":860:862  10 */\n      0x0a\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":845:862  payoutPercent+=10 */\n      dup3\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      swap2\n      pop\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":894:897  110 */\n      0x6e\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":880:893  payoutPercent */\n      dup3\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":880:897  payoutPercent>110 */\n      gt\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":877:950  if(payoutPercent>110){... */\n      iszero\n      tag_21\n      jumpi\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":931:934  110 */\n      0x6e\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":917:934  payoutPercent=110 */\n      swap2\n      pop\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":877:950  if(payoutPercent>110){... */\n    tag_21:\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":985:991  status */\n      dup1\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":971:1015  string.concat(status,\" - VIP bonus applied\") */\n      add(0x20, mload(0x40))\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":964:1015  status=string.concat(status,\" - VIP bonus applied\") */\n      swap1\n      pop\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":800:1027  if(isVIP && payoutPercent!=0 ){... */\n    tag_18:\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":1044:1057  payoutPercent */\n      dup2\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":1058:1064  status */\n      dup2\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":1037:1065  return(payoutPercent,status) */\n      swap4\n      pop\n      swap4\n      pop\n      pop\n      pop\n        /* \"Bones-of-Bitcoin/contracts/conditional/hard.sol\":104:1073  function claim(uint delayHours,bool isVIP,uint dayAfterFlight) pure public returns(uint,string memory){... */\n    tag_10:\n      swap4\n      pop\n      swap4\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_25:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_27:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_28:\n        /* \"#utility.yul\":490:514   */\n      tag_49\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_27\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_50\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      0x00\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_50:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_29:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_52\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_28\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:780   */\n    tag_30:\n        /* \"#utility.yul\":724:731   */\n      0x00\n        /* \"#utility.yul\":767:772   */\n      dup2\n        /* \"#utility.yul\":760:773   */\n      iszero\n        /* \"#utility.yul\":753:774   */\n      iszero\n        /* \"#utility.yul\":742:774   */\n      swap1\n      pop\n        /* \"#utility.yul\":690:780   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":786:902   */\n    tag_31:\n        /* \"#utility.yul\":856:877   */\n      tag_55\n        /* \"#utility.yul\":871:876   */\n      dup2\n        /* \"#utility.yul\":856:877   */\n      tag_30\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":849:854   */\n      dup2\n        /* \"#utility.yul\":846:878   */\n      eq\n        /* \"#utility.yul\":836:896   */\n      tag_56\n      jumpi\n        /* \"#utility.yul\":892:893   */\n      0x00\n        /* \"#utility.yul\":889:890   */\n      0x00\n        /* \"#utility.yul\":882:894   */\n      revert\n        /* \"#utility.yul\":836:896   */\n    tag_56:\n        /* \"#utility.yul\":786:902   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":908:1041   */\n    tag_32:\n        /* \"#utility.yul\":951:956   */\n      0x00\n        /* \"#utility.yul\":989:995   */\n      dup2\n        /* \"#utility.yul\":976:996   */\n      calldataload\n        /* \"#utility.yul\":967:996   */\n      swap1\n      pop\n        /* \"#utility.yul\":1005:1035   */\n      tag_58\n        /* \"#utility.yul\":1029:1034   */\n      dup2\n        /* \"#utility.yul\":1005:1035   */\n      tag_31\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":908:1041   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1047:1660   */\n    tag_6:\n        /* \"#utility.yul\":1121:1127   */\n      0x00\n        /* \"#utility.yul\":1129:1135   */\n      0x00\n        /* \"#utility.yul\":1137:1143   */\n      0x00\n        /* \"#utility.yul\":1186:1188   */\n      0x60\n        /* \"#utility.yul\":1174:1183   */\n      dup5\n        /* \"#utility.yul\":1165:1172   */\n      dup7\n        /* \"#utility.yul\":1161:1184   */\n      sub\n        /* \"#utility.yul\":1157:1189   */\n      slt\n        /* \"#utility.yul\":1154:1273   */\n      iszero\n      tag_60\n      jumpi\n        /* \"#utility.yul\":1192:1271   */\n      tag_61\n      tag_25\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1154:1273   */\n    tag_60:\n        /* \"#utility.yul\":1312:1313   */\n      0x00\n        /* \"#utility.yul\":1337:1390   */\n      tag_62\n        /* \"#utility.yul\":1382:1389   */\n      dup7\n        /* \"#utility.yul\":1373:1379   */\n      dup3\n        /* \"#utility.yul\":1362:1371   */\n      dup8\n        /* \"#utility.yul\":1358:1380   */\n      add\n        /* \"#utility.yul\":1337:1390   */\n      tag_29\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1327:1390   */\n      swap4\n      pop\n        /* \"#utility.yul\":1283:1400   */\n      pop\n        /* \"#utility.yul\":1439:1441   */\n      0x20\n        /* \"#utility.yul\":1465:1515   */\n      tag_63\n        /* \"#utility.yul\":1507:1514   */\n      dup7\n        /* \"#utility.yul\":1498:1504   */\n      dup3\n        /* \"#utility.yul\":1487:1496   */\n      dup8\n        /* \"#utility.yul\":1483:1505   */\n      add\n        /* \"#utility.yul\":1465:1515   */\n      tag_32\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":1455:1515   */\n      swap3\n      pop\n        /* \"#utility.yul\":1410:1525   */\n      pop\n        /* \"#utility.yul\":1564:1566   */\n      0x40\n        /* \"#utility.yul\":1590:1643   */\n      tag_64\n        /* \"#utility.yul\":1635:1642   */\n      dup7\n        /* \"#utility.yul\":1626:1632   */\n      dup3\n        /* \"#utility.yul\":1615:1624   */\n      dup8\n        /* \"#utility.yul\":1611:1633   */\n      add\n        /* \"#utility.yul\":1590:1643   */\n      tag_29\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1580:1643   */\n      swap2\n      pop\n        /* \"#utility.yul\":1535:1653   */\n      pop\n        /* \"#utility.yul\":1047:1660   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1666:1784   */\n    tag_33:\n        /* \"#utility.yul\":1753:1777   */\n      tag_66\n        /* \"#utility.yul\":1771:1776   */\n      dup2\n        /* \"#utility.yul\":1753:1777   */\n      tag_27\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":1748:1751   */\n      dup3\n        /* \"#utility.yul\":1741:1778   */\n      mstore\n        /* \"#utility.yul\":1666:1784   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1790:1889   */\n    tag_34:\n        /* \"#utility.yul\":1842:1848   */\n      0x00\n        /* \"#utility.yul\":1876:1881   */\n      dup2\n        /* \"#utility.yul\":1870:1882   */\n      mload\n        /* \"#utility.yul\":1860:1882   */\n      swap1\n      pop\n        /* \"#utility.yul\":1790:1889   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1895:2064   */\n    tag_35:\n        /* \"#utility.yul\":1979:1990   */\n      0x00\n        /* \"#utility.yul\":2013:2019   */\n      dup3\n        /* \"#utility.yul\":2008:2011   */\n      dup3\n        /* \"#utility.yul\":2001:2020   */\n      mstore\n        /* \"#utility.yul\":2053:2057   */\n      0x20\n        /* \"#utility.yul\":2048:2051   */\n      dup3\n        /* \"#utility.yul\":2044:2058   */\n      add\n        /* \"#utility.yul\":2029:2058   */\n      swap1\n      pop\n        /* \"#utility.yul\":1895:2064   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2070:2209   */\n    tag_36:\n        /* \"#utility.yul\":2159:2165   */\n      dup3\n        /* \"#utility.yul\":2154:2157   */\n      dup2\n        /* \"#utility.yul\":2149:2152   */\n      dup4\n        /* \"#utility.yul\":2143:2166   */\n      mcopy\n        /* \"#utility.yul\":2200:2201   */\n      0x00\n        /* \"#utility.yul\":2191:2197   */\n      dup4\n        /* \"#utility.yul\":2186:2189   */\n      dup4\n        /* \"#utility.yul\":2182:2198   */\n      add\n        /* \"#utility.yul\":2175:2202   */\n      mstore\n        /* \"#utility.yul\":2070:2209   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2215:2317   */\n    tag_37:\n        /* \"#utility.yul\":2256:2262   */\n      0x00\n        /* \"#utility.yul\":2307:2309   */\n      0x1f\n        /* \"#utility.yul\":2303:2310   */\n      not\n        /* \"#utility.yul\":2298:2300   */\n      0x1f\n        /* \"#utility.yul\":2291:2296   */\n      dup4\n        /* \"#utility.yul\":2287:2301   */\n      add\n        /* \"#utility.yul\":2283:2311   */\n      and\n        /* \"#utility.yul\":2273:2311   */\n      swap1\n      pop\n        /* \"#utility.yul\":2215:2317   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2323:2700   */\n    tag_38:\n        /* \"#utility.yul\":2411:2414   */\n      0x00\n        /* \"#utility.yul\":2439:2478   */\n      tag_72\n        /* \"#utility.yul\":2472:2477   */\n      dup3\n        /* \"#utility.yul\":2439:2478   */\n      tag_34\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":2494:2565   */\n      tag_73\n        /* \"#utility.yul\":2558:2564   */\n      dup2\n        /* \"#utility.yul\":2553:2556   */\n      dup6\n        /* \"#utility.yul\":2494:2565   */\n      tag_35\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":2487:2565   */\n      swap4\n      pop\n        /* \"#utility.yul\":2574:2639   */\n      tag_74\n        /* \"#utility.yul\":2632:2638   */\n      dup2\n        /* \"#utility.yul\":2627:2630   */\n      dup6\n        /* \"#utility.yul\":2620:2624   */\n      0x20\n        /* \"#utility.yul\":2613:2618   */\n      dup7\n        /* \"#utility.yul\":2609:2625   */\n      add\n        /* \"#utility.yul\":2574:2639   */\n      tag_36\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":2664:2693   */\n      tag_75\n        /* \"#utility.yul\":2686:2692   */\n      dup2\n        /* \"#utility.yul\":2664:2693   */\n      tag_37\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":2659:2662   */\n      dup5\n        /* \"#utility.yul\":2655:2694   */\n      add\n        /* \"#utility.yul\":2648:2694   */\n      swap2\n      pop\n        /* \"#utility.yul\":2415:2700   */\n      pop\n        /* \"#utility.yul\":2323:2700   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2706:3129   */\n    tag_9:\n        /* \"#utility.yul\":2847:2851   */\n      0x00\n        /* \"#utility.yul\":2885:2887   */\n      0x40\n        /* \"#utility.yul\":2874:2883   */\n      dup3\n        /* \"#utility.yul\":2870:2888   */\n      add\n        /* \"#utility.yul\":2862:2888   */\n      swap1\n      pop\n        /* \"#utility.yul\":2898:2969   */\n      tag_77\n        /* \"#utility.yul\":2966:2967   */\n      0x00\n        /* \"#utility.yul\":2955:2964   */\n      dup4\n        /* \"#utility.yul\":2951:2968   */\n      add\n        /* \"#utility.yul\":2942:2948   */\n      dup6\n        /* \"#utility.yul\":2898:2969   */\n      tag_33\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":3016:3025   */\n      dup2\n        /* \"#utility.yul\":3010:3014   */\n      dup2\n        /* \"#utility.yul\":3006:3026   */\n      sub\n        /* \"#utility.yul\":3001:3003   */\n      0x20\n        /* \"#utility.yul\":2990:2999   */\n      dup4\n        /* \"#utility.yul\":2986:3004   */\n      add\n        /* \"#utility.yul\":2979:3027   */\n      mstore\n        /* \"#utility.yul\":3044:3122   */\n      tag_78\n        /* \"#utility.yul\":3117:3121   */\n      dup2\n        /* \"#utility.yul\":3108:3114   */\n      dup5\n        /* \"#utility.yul\":3044:3122   */\n      tag_38\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":3036:3122   */\n      swap1\n      pop\n        /* \"#utility.yul\":2706:3129   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3135:3315   */\n    tag_39:\n        /* \"#utility.yul\":3183:3260   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3180:3181   */\n      0x00\n        /* \"#utility.yul\":3173:3261   */\n      mstore\n        /* \"#utility.yul\":3280:3284   */\n      0x11\n        /* \"#utility.yul\":3277:3278   */\n      0x04\n        /* \"#utility.yul\":3270:3285   */\n      mstore\n        /* \"#utility.yul\":3304:3308   */\n      0x24\n        /* \"#utility.yul\":3301:3302   */\n      0x00\n        /* \"#utility.yul\":3294:3309   */\n      revert\n        /* \"#utility.yul\":3321:3512   */\n    tag_20:\n        /* \"#utility.yul\":3361:3364   */\n      0x00\n        /* \"#utility.yul\":3380:3400   */\n      tag_81\n        /* \"#utility.yul\":3398:3399   */\n      dup3\n        /* \"#utility.yul\":3380:3400   */\n      tag_27\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":3375:3400   */\n      swap2\n      pop\n        /* \"#utility.yul\":3414:3434   */\n      tag_82\n        /* \"#utility.yul\":3432:3433   */\n      dup4\n        /* \"#utility.yul\":3414:3434   */\n      tag_27\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":3409:3434   */\n      swap3\n      pop\n        /* \"#utility.yul\":3457:3458   */\n      dup3\n        /* \"#utility.yul\":3454:3455   */\n      dup3\n        /* \"#utility.yul\":3450:3459   */\n      add\n        /* \"#utility.yul\":3443:3459   */\n      swap1\n      pop\n        /* \"#utility.yul\":3478:3481   */\n      dup1\n        /* \"#utility.yul\":3475:3476   */\n      dup3\n        /* \"#utility.yul\":3472:3482   */\n      gt\n        /* \"#utility.yul\":3469:3505   */\n      iszero\n      tag_83\n      jumpi\n        /* \"#utility.yul\":3485:3503   */\n      tag_84\n      tag_39\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":3469:3505   */\n    tag_83:\n        /* \"#utility.yul\":3321:3512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3518:3666   */\n    tag_40:\n        /* \"#utility.yul\":3620:3631   */\n      0x00\n        /* \"#utility.yul\":3657:3660   */\n      dup2\n        /* \"#utility.yul\":3642:3660   */\n      swap1\n      pop\n        /* \"#utility.yul\":3518:3666   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3672:4062   */\n    tag_41:\n        /* \"#utility.yul\":3778:3781   */\n      0x00\n        /* \"#utility.yul\":3806:3845   */\n      tag_87\n        /* \"#utility.yul\":3839:3844   */\n      dup3\n        /* \"#utility.yul\":3806:3845   */\n      tag_34\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":3861:3950   */\n      tag_88\n        /* \"#utility.yul\":3943:3949   */\n      dup2\n        /* \"#utility.yul\":3938:3941   */\n      dup6\n        /* \"#utility.yul\":3861:3950   */\n      tag_40\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":3854:3950   */\n      swap4\n      pop\n        /* \"#utility.yul\":3959:4024   */\n      tag_89\n        /* \"#utility.yul\":4017:4023   */\n      dup2\n        /* \"#utility.yul\":4012:4015   */\n      dup6\n        /* \"#utility.yul\":4005:4009   */\n      0x20\n        /* \"#utility.yul\":3998:4003   */\n      dup7\n        /* \"#utility.yul\":3994:4010   */\n      add\n        /* \"#utility.yul\":3959:4024   */\n      tag_36\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":4049:4055   */\n      dup1\n        /* \"#utility.yul\":4044:4047   */\n      dup5\n        /* \"#utility.yul\":4040:4056   */\n      add\n        /* \"#utility.yul\":4033:4056   */\n      swap2\n      pop\n        /* \"#utility.yul\":3782:4062   */\n      pop\n        /* \"#utility.yul\":3672:4062   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4068:4266   */\n    tag_42:\n        /* \"#utility.yul\":4237:4259   */\n      0x202d2056495020626f6e7573206170706c696564000000000000000000000000\n        /* \"#utility.yul\":4232:4235   */\n      dup2\n        /* \"#utility.yul\":4225:4260   */\n      mstore\n        /* \"#utility.yul\":4068:4266   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4272:4814   */\n    tag_23:\n        /* \"#utility.yul\":4495:4498   */\n      0x00\n        /* \"#utility.yul\":4517:4612   */\n      tag_92\n        /* \"#utility.yul\":4608:4611   */\n      dup3\n        /* \"#utility.yul\":4599:4605   */\n      dup5\n        /* \"#utility.yul\":4517:4612   */\n      tag_41\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":4510:4612   */\n      swap2\n      pop\n        /* \"#utility.yul\":4622:4760   */\n      tag_93\n        /* \"#utility.yul\":4756:4759   */\n      dup3\n        /* \"#utility.yul\":4622:4760   */\n      tag_42\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":4785:4787   */\n      0x14\n        /* \"#utility.yul\":4780:4783   */\n      dup3\n        /* \"#utility.yul\":4776:4788   */\n      add\n        /* \"#utility.yul\":4769:4788   */\n      swap2\n      pop\n        /* \"#utility.yul\":4805:4808   */\n      dup2\n        /* \"#utility.yul\":4798:4808   */\n      swap1\n      pop\n        /* \"#utility.yul\":4272:4814   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_dd0206810208551d23409d8d0159d19eb3d3a8321c02d36157d0c73845271dd0 436c61696d20696e76616c6964202d207375626d697474656420746f6f206c617465\n\n    auxdata: 0xa2646970667358221220f8ec6e6dbb832999253cf45e7a5d079437c6893d3dcb40d2fbbd64d6bae9eb6764736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b506104b38061001c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610029575f3560e01c80632d91e4581461002d575b5f5ffd5b61004760048036038101906100429190610279565b61005e565b604051610055929190610348565b60405180910390f35b5f6060600385116100a9575f6040518060400160405280601b81526020017f4e6f207061796f7574202d2044656c617920746f6f2073686f7274000000000081525091509150610205565b60078311156100d5575f60405180606001604052806022815260200161045c6022913991509150610205565b5f6060600687101561012257601991506040518060400160405280600881526020017f417070726f76656400000000000000000000000000000000000000000000000081525090506101aa565b600c87101561016c57603291506040518060400160405280600881526020017f417070726f76656400000000000000000000000000000000000000000000000081525090506101a9565b606491506040518060400160405280600881526020017f417070726f76656400000000000000000000000000000000000000000000000081525090505b5b8580156101b757505f8214155b156101fc57600a826101c991906103a3565b9150606e8211156101d957606e91505b806040516020016101ea9190610436565b60405160208183030381529060405290505b81819350935050505b935093915050565b5f5ffd5b5f819050919050565b61022381610211565b811461022d575f5ffd5b50565b5f8135905061023e8161021a565b92915050565b5f8115159050919050565b61025881610244565b8114610262575f5ffd5b50565b5f813590506102738161024f565b92915050565b5f5f5f606084860312156102905761028f61020d565b5b5f61029d86828701610230565b93505060206102ae86828701610265565b92505060406102bf86828701610230565b9150509250925092565b6102d281610211565b82525050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61031a826102d8565b61032481856102e2565b93506103348185602086016102f2565b61033d81610300565b840191505092915050565b5f60408201905061035b5f8301856102c9565b818103602083015261036d8184610310565b90509392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6103ad82610211565b91506103b883610211565b92508282019050808211156103d0576103cf610376565b5b92915050565b5f81905092915050565b5f6103ea826102d8565b6103f481856103d6565b93506104048185602086016102f2565b80840191505092915050565b7f202d2056495020626f6e7573206170706c696564000000000000000000000000815250565b5f61044182846103e0565b915061044c82610410565b6014820191508190509291505056fe436c61696d20696e76616c6964202d207375626d697474656420746f6f206c617465a2646970667358221220f8ec6e6dbb832999253cf45e7a5d079437c6893d3dcb40d2fbbd64d6bae9eb6764736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4B3 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2D91E458 EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x279 JUMP JUMPDEST PUSH2 0x5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55 SWAP3 SWAP2 SWAP1 PUSH2 0x348 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x60 PUSH1 0x3 DUP6 GT PUSH2 0xA9 JUMPI PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E6F207061796F7574202D2044656C617920746F6F2073686F72740000000000 DUP2 MSTORE POP SWAP2 POP SWAP2 POP PUSH2 0x205 JUMP JUMPDEST PUSH1 0x7 DUP4 GT ISZERO PUSH2 0xD5 JUMPI PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x45C PUSH1 0x22 SWAP2 CODECOPY SWAP2 POP SWAP2 POP PUSH2 0x205 JUMP JUMPDEST PUSH0 PUSH1 0x60 PUSH1 0x6 DUP8 LT ISZERO PUSH2 0x122 JUMPI PUSH1 0x19 SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x417070726F766564000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x1AA JUMP JUMPDEST PUSH1 0xC DUP8 LT ISZERO PUSH2 0x16C JUMPI PUSH1 0x32 SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x417070726F766564000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x1A9 JUMP JUMPDEST PUSH1 0x64 SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x417070726F766564000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP JUMPDEST JUMPDEST DUP6 DUP1 ISZERO PUSH2 0x1B7 JUMPI POP PUSH0 DUP3 EQ ISZERO JUMPDEST ISZERO PUSH2 0x1FC JUMPI PUSH1 0xA DUP3 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x3A3 JUMP JUMPDEST SWAP2 POP PUSH1 0x6E DUP3 GT ISZERO PUSH2 0x1D9 JUMPI PUSH1 0x6E SWAP2 POP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x436 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP JUMPDEST DUP2 DUP2 SWAP4 POP SWAP4 POP POP POP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x223 DUP2 PUSH2 0x211 JUMP JUMPDEST DUP2 EQ PUSH2 0x22D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x23E DUP2 PUSH2 0x21A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x258 DUP2 PUSH2 0x244 JUMP JUMPDEST DUP2 EQ PUSH2 0x262 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x273 DUP2 PUSH2 0x24F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x290 JUMPI PUSH2 0x28F PUSH2 0x20D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x29D DUP7 DUP3 DUP8 ADD PUSH2 0x230 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2AE DUP7 DUP3 DUP8 ADD PUSH2 0x265 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2BF DUP7 DUP3 DUP8 ADD PUSH2 0x230 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2D2 DUP2 PUSH2 0x211 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x31A DUP3 PUSH2 0x2D8 JUMP JUMPDEST PUSH2 0x324 DUP2 DUP6 PUSH2 0x2E2 JUMP JUMPDEST SWAP4 POP PUSH2 0x334 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2F2 JUMP JUMPDEST PUSH2 0x33D DUP2 PUSH2 0x300 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x35B PUSH0 DUP4 ADD DUP6 PUSH2 0x2C9 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x36D DUP2 DUP5 PUSH2 0x310 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x3AD DUP3 PUSH2 0x211 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B8 DUP4 PUSH2 0x211 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3D0 JUMPI PUSH2 0x3CF PUSH2 0x376 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3EA DUP3 PUSH2 0x2D8 JUMP JUMPDEST PUSH2 0x3F4 DUP2 DUP6 PUSH2 0x3D6 JUMP JUMPDEST SWAP4 POP PUSH2 0x404 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2F2 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x202D2056495020626F6E7573206170706C696564000000000000000000000000 DUP2 MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x441 DUP3 DUP5 PUSH2 0x3E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x44C DUP3 PUSH2 0x410 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID NUMBER PUSH13 0x61696D20696E76616C6964202D KECCAK256 PUSH20 0x75626D697474656420746F6F206C617465A26469 PUSH17 0x667358221220F8EC6E6DBB832999253CF4 MCOPY PUSH27 0x5D079437C6893D3DCB40D2FBBD64D6BAE9EB6764736F6C63430008 0x1E STOP CALLER ",
							"sourceMap": "79:997:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@claim_107": {
									"entryPoint": 94,
									"id": 107,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"abi_decode_t_bool": {
									"entryPoint": 613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 560,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_boolt_uint256": {
									"entryPoint": 633,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 784,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 992,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b90d5536f0f40eb92f24ca6ce2e2844ddcd971a91e11bda995de5ce4a350f3f2_to_t_bytes20_nonPadded_inplace_fromStack": {
									"entryPoint": 1040,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 713,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_b90d5536f0f40eb92f24ca6ce2e2844ddcd971a91e11bda995de5ce4a350f3f2__to_t_string_memory_ptr_t_bytes20__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1078,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 840,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 738,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 982,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 931,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 580,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 529,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 754,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 886,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 525,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 768,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_bool": {
									"entryPoint": 591,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 538,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4817:1",
										"nodeType": "YulBlock",
										"src": "0:4817:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:32:1",
													"nodeType": "YulBlock",
													"src": "379:32:1",
													"statements": [
														{
															"nativeSrc": "389:16:1",
															"nodeType": "YulAssignment",
															"src": "389:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:1",
																"nodeType": "YulIdentifier",
																"src": "400:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:77:1"
											},
											{
												"body": {
													"nativeSrc": "460:79:1",
													"nodeType": "YulBlock",
													"src": "460:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:1",
																"nodeType": "YulBlock",
																"src": "517:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:1",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:1",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:1"
																			},
																			"nativeSrc": "519:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:1"
																		},
																		"nativeSrc": "519:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:1"
																				},
																				"nativeSrc": "490:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:1"
																		},
																		"nativeSrc": "480:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:1"
																},
																"nativeSrc": "473:43:1",
																"nodeType": "YulFunctionCall",
																"src": "473:43:1"
															},
															"nativeSrc": "470:63:1",
															"nodeType": "YulIf",
															"src": "470:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:1",
														"nodeType": "YulTypedName",
														"src": "453:5:1",
														"type": ""
													}
												],
												"src": "417:122:1"
											},
											{
												"body": {
													"nativeSrc": "597:87:1",
													"nodeType": "YulBlock",
													"src": "597:87:1",
													"statements": [
														{
															"nativeSrc": "607:29:1",
															"nodeType": "YulAssignment",
															"src": "607:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:1"
																},
																"nativeSrc": "616:20:1",
																"nodeType": "YulFunctionCall",
																"src": "616:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:1"
																},
																"nativeSrc": "645:33:1",
																"nodeType": "YulFunctionCall",
																"src": "645:33:1"
															},
															"nativeSrc": "645:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:1",
														"nodeType": "YulTypedName",
														"src": "575:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:1",
														"nodeType": "YulTypedName",
														"src": "583:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:1",
														"nodeType": "YulTypedName",
														"src": "591:5:1",
														"type": ""
													}
												],
												"src": "545:139:1"
											},
											{
												"body": {
													"nativeSrc": "732:48:1",
													"nodeType": "YulBlock",
													"src": "732:48:1",
													"statements": [
														{
															"nativeSrc": "742:32:1",
															"nodeType": "YulAssignment",
															"src": "742:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "767:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "767:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "760:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "760:6:1"
																		},
																		"nativeSrc": "760:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "760:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "753:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "753:6:1"
																},
																"nativeSrc": "753:21:1",
																"nodeType": "YulFunctionCall",
																"src": "753:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "742:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "742:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "690:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "714:5:1",
														"nodeType": "YulTypedName",
														"src": "714:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "724:7:1",
														"nodeType": "YulTypedName",
														"src": "724:7:1",
														"type": ""
													}
												],
												"src": "690:90:1"
											},
											{
												"body": {
													"nativeSrc": "826:76:1",
													"nodeType": "YulBlock",
													"src": "826:76:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "880:16:1",
																"nodeType": "YulBlock",
																"src": "880:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "889:1:1",
																					"nodeType": "YulLiteral",
																					"src": "889:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "892:1:1",
																					"nodeType": "YulLiteral",
																					"src": "892:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "882:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "882:6:1"
																			},
																			"nativeSrc": "882:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "882:12:1"
																		},
																		"nativeSrc": "882:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "882:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "849:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "849:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "871:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "856:14:1",
																					"nodeType": "YulIdentifier",
																					"src": "856:14:1"
																				},
																				"nativeSrc": "856:21:1",
																				"nodeType": "YulFunctionCall",
																				"src": "856:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "846:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "846:2:1"
																		},
																		"nativeSrc": "846:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "846:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "839:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "839:6:1"
																},
																"nativeSrc": "839:40:1",
																"nodeType": "YulFunctionCall",
																"src": "839:40:1"
															},
															"nativeSrc": "836:60:1",
															"nodeType": "YulIf",
															"src": "836:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "786:116:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "819:5:1",
														"nodeType": "YulTypedName",
														"src": "819:5:1",
														"type": ""
													}
												],
												"src": "786:116:1"
											},
											{
												"body": {
													"nativeSrc": "957:84:1",
													"nodeType": "YulBlock",
													"src": "957:84:1",
													"statements": [
														{
															"nativeSrc": "967:29:1",
															"nodeType": "YulAssignment",
															"src": "967:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "989:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "989:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "976:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "976:12:1"
																},
																"nativeSrc": "976:20:1",
																"nodeType": "YulFunctionCall",
																"src": "976:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "967:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "967:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1029:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1029:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "1005:23:1",
																	"nodeType": "YulIdentifier",
																	"src": "1005:23:1"
																},
																"nativeSrc": "1005:30:1",
																"nodeType": "YulFunctionCall",
																"src": "1005:30:1"
															},
															"nativeSrc": "1005:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "1005:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "908:133:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "935:6:1",
														"nodeType": "YulTypedName",
														"src": "935:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "943:3:1",
														"nodeType": "YulTypedName",
														"src": "943:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "951:5:1",
														"nodeType": "YulTypedName",
														"src": "951:5:1",
														"type": ""
													}
												],
												"src": "908:133:1"
											},
											{
												"body": {
													"nativeSrc": "1144:516:1",
													"nodeType": "YulBlock",
													"src": "1144:516:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1190:83:1",
																"nodeType": "YulBlock",
																"src": "1190:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1192:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "1192:77:1"
																			},
																			"nativeSrc": "1192:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1192:79:1"
																		},
																		"nativeSrc": "1192:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1192:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1165:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1165:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1174:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1174:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1161:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1161:3:1"
																		},
																		"nativeSrc": "1161:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1186:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1186:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1157:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1157:3:1"
																},
																"nativeSrc": "1157:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1157:32:1"
															},
															"nativeSrc": "1154:119:1",
															"nodeType": "YulIf",
															"src": "1154:119:1"
														},
														{
															"nativeSrc": "1283:117:1",
															"nodeType": "YulBlock",
															"src": "1283:117:1",
															"statements": [
																{
																	"nativeSrc": "1298:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1298:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1312:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1312:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1302:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1302:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1327:63:1",
																	"nodeType": "YulAssignment",
																	"src": "1327:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1362:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1362:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1373:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1373:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1358:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1358:3:1"
																				},
																				"nativeSrc": "1358:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1358:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1382:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1382:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1337:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "1337:20:1"
																		},
																		"nativeSrc": "1337:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1337:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1327:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1327:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1410:115:1",
															"nodeType": "YulBlock",
															"src": "1410:115:1",
															"statements": [
																{
																	"nativeSrc": "1425:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1425:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1439:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1439:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1429:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1429:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1455:60:1",
																	"nodeType": "YulAssignment",
																	"src": "1455:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1487:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1487:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1498:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1498:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1483:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1483:3:1"
																				},
																				"nativeSrc": "1483:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1483:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1507:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1507:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "1465:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "1465:17:1"
																		},
																		"nativeSrc": "1465:50:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1465:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1455:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1455:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1535:118:1",
															"nodeType": "YulBlock",
															"src": "1535:118:1",
															"statements": [
																{
																	"nativeSrc": "1550:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1550:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1564:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1564:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1554:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1554:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1580:63:1",
																	"nodeType": "YulAssignment",
																	"src": "1580:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1615:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1615:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1626:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1626:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1611:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1611:3:1"
																				},
																				"nativeSrc": "1611:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1611:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1635:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1635:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1590:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "1590:20:1"
																		},
																		"nativeSrc": "1590:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1590:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1580:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1580:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_boolt_uint256",
												"nativeSrc": "1047:613:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1098:9:1",
														"nodeType": "YulTypedName",
														"src": "1098:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1109:7:1",
														"nodeType": "YulTypedName",
														"src": "1109:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1121:6:1",
														"nodeType": "YulTypedName",
														"src": "1121:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1129:6:1",
														"nodeType": "YulTypedName",
														"src": "1129:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1137:6:1",
														"nodeType": "YulTypedName",
														"src": "1137:6:1",
														"type": ""
													}
												],
												"src": "1047:613:1"
											},
											{
												"body": {
													"nativeSrc": "1731:53:1",
													"nodeType": "YulBlock",
													"src": "1731:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1748:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1748:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1771:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1771:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1753:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "1753:17:1"
																		},
																		"nativeSrc": "1753:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1753:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1741:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1741:6:1"
																},
																"nativeSrc": "1741:37:1",
																"nodeType": "YulFunctionCall",
																"src": "1741:37:1"
															},
															"nativeSrc": "1741:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "1741:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1666:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1719:5:1",
														"nodeType": "YulTypedName",
														"src": "1719:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1726:3:1",
														"nodeType": "YulTypedName",
														"src": "1726:3:1",
														"type": ""
													}
												],
												"src": "1666:118:1"
											},
											{
												"body": {
													"nativeSrc": "1849:40:1",
													"nodeType": "YulBlock",
													"src": "1849:40:1",
													"statements": [
														{
															"nativeSrc": "1860:22:1",
															"nodeType": "YulAssignment",
															"src": "1860:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1876:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1876:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1870:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1870:5:1"
																},
																"nativeSrc": "1870:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1870:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1860:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1860:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1790:99:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1832:5:1",
														"nodeType": "YulTypedName",
														"src": "1832:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1842:6:1",
														"nodeType": "YulTypedName",
														"src": "1842:6:1",
														"type": ""
													}
												],
												"src": "1790:99:1"
											},
											{
												"body": {
													"nativeSrc": "1991:73:1",
													"nodeType": "YulBlock",
													"src": "1991:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2008:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2008:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2013:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2013:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2001:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2001:6:1"
																},
																"nativeSrc": "2001:19:1",
																"nodeType": "YulFunctionCall",
																"src": "2001:19:1"
															},
															"nativeSrc": "2001:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "2001:19:1"
														},
														{
															"nativeSrc": "2029:29:1",
															"nodeType": "YulAssignment",
															"src": "2029:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2048:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2048:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2053:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2053:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2044:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2044:3:1"
																},
																"nativeSrc": "2044:14:1",
																"nodeType": "YulFunctionCall",
																"src": "2044:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2029:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "2029:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1895:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1963:3:1",
														"nodeType": "YulTypedName",
														"src": "1963:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1968:6:1",
														"nodeType": "YulTypedName",
														"src": "1968:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1979:11:1",
														"nodeType": "YulTypedName",
														"src": "1979:11:1",
														"type": ""
													}
												],
												"src": "1895:169:1"
											},
											{
												"body": {
													"nativeSrc": "2132:77:1",
													"nodeType": "YulBlock",
													"src": "2132:77:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "2149:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2149:3:1"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "2154:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2154:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2159:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2159:6:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "2143:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2143:5:1"
																},
																"nativeSrc": "2143:23:1",
																"nodeType": "YulFunctionCall",
																"src": "2143:23:1"
															},
															"nativeSrc": "2143:23:1",
															"nodeType": "YulExpressionStatement",
															"src": "2143:23:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2186:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2186:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2191:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2191:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2182:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2182:3:1"
																		},
																		"nativeSrc": "2182:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2182:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2200:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2200:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2175:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2175:6:1"
																},
																"nativeSrc": "2175:27:1",
																"nodeType": "YulFunctionCall",
																"src": "2175:27:1"
															},
															"nativeSrc": "2175:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "2175:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "2070:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2114:3:1",
														"nodeType": "YulTypedName",
														"src": "2114:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "2119:3:1",
														"nodeType": "YulTypedName",
														"src": "2119:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2124:6:1",
														"nodeType": "YulTypedName",
														"src": "2124:6:1",
														"type": ""
													}
												],
												"src": "2070:139:1"
											},
											{
												"body": {
													"nativeSrc": "2263:54:1",
													"nodeType": "YulBlock",
													"src": "2263:54:1",
													"statements": [
														{
															"nativeSrc": "2273:38:1",
															"nodeType": "YulAssignment",
															"src": "2273:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2291:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2291:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2298:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2298:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2287:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2287:3:1"
																		},
																		"nativeSrc": "2287:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2287:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2307:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2307:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2303:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2303:3:1"
																		},
																		"nativeSrc": "2303:7:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2303:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2283:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2283:3:1"
																},
																"nativeSrc": "2283:28:1",
																"nodeType": "YulFunctionCall",
																"src": "2283:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2273:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2273:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2215:102:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2246:5:1",
														"nodeType": "YulTypedName",
														"src": "2246:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2256:6:1",
														"nodeType": "YulTypedName",
														"src": "2256:6:1",
														"type": ""
													}
												],
												"src": "2215:102:1"
											},
											{
												"body": {
													"nativeSrc": "2415:285:1",
													"nodeType": "YulBlock",
													"src": "2415:285:1",
													"statements": [
														{
															"nativeSrc": "2425:53:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2425:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2472:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2472:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2439:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "2439:32:1"
																},
																"nativeSrc": "2439:39:1",
																"nodeType": "YulFunctionCall",
																"src": "2439:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2429:6:1",
																	"nodeType": "YulTypedName",
																	"src": "2429:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2487:78:1",
															"nodeType": "YulAssignment",
															"src": "2487:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2553:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2553:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2558:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2558:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2494:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "2494:58:1"
																},
																"nativeSrc": "2494:71:1",
																"nodeType": "YulFunctionCall",
																"src": "2494:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2487:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2487:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2613:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2613:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2620:4:1",
																				"nodeType": "YulLiteral",
																				"src": "2620:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2609:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2609:3:1"
																		},
																		"nativeSrc": "2609:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2609:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2627:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2627:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2632:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2632:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2574:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "2574:34:1"
																},
																"nativeSrc": "2574:65:1",
																"nodeType": "YulFunctionCall",
																"src": "2574:65:1"
															},
															"nativeSrc": "2574:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "2574:65:1"
														},
														{
															"nativeSrc": "2648:46:1",
															"nodeType": "YulAssignment",
															"src": "2648:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2659:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2659:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2686:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2686:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2664:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "2664:21:1"
																		},
																		"nativeSrc": "2664:29:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2664:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2655:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2655:3:1"
																},
																"nativeSrc": "2655:39:1",
																"nodeType": "YulFunctionCall",
																"src": "2655:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2648:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2648:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2323:377:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2396:5:1",
														"nodeType": "YulTypedName",
														"src": "2396:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2403:3:1",
														"nodeType": "YulTypedName",
														"src": "2403:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2411:3:1",
														"nodeType": "YulTypedName",
														"src": "2411:3:1",
														"type": ""
													}
												],
												"src": "2323:377:1"
											},
											{
												"body": {
													"nativeSrc": "2852:277:1",
													"nodeType": "YulBlock",
													"src": "2852:277:1",
													"statements": [
														{
															"nativeSrc": "2862:26:1",
															"nodeType": "YulAssignment",
															"src": "2862:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2874:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2874:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2885:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2885:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2870:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2870:3:1"
																},
																"nativeSrc": "2870:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2870:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2862:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2862:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2942:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2942:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2955:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2955:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2966:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2966:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2951:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2951:3:1"
																		},
																		"nativeSrc": "2951:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2951:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2898:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "2898:43:1"
																},
																"nativeSrc": "2898:71:1",
																"nodeType": "YulFunctionCall",
																"src": "2898:71:1"
															},
															"nativeSrc": "2898:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "2898:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2990:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2990:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3001:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3001:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2986:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2986:3:1"
																		},
																		"nativeSrc": "2986:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2986:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3010:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "3010:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3016:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3016:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3006:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3006:3:1"
																		},
																		"nativeSrc": "3006:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3006:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2979:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2979:6:1"
																},
																"nativeSrc": "2979:48:1",
																"nodeType": "YulFunctionCall",
																"src": "2979:48:1"
															},
															"nativeSrc": "2979:48:1",
															"nodeType": "YulExpressionStatement",
															"src": "2979:48:1"
														},
														{
															"nativeSrc": "3036:86:1",
															"nodeType": "YulAssignment",
															"src": "3036:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3108:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3108:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "3117:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3117:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3044:63:1",
																	"nodeType": "YulIdentifier",
																	"src": "3044:63:1"
																},
																"nativeSrc": "3044:78:1",
																"nodeType": "YulFunctionCall",
																"src": "3044:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3036:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3036:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2706:423:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2816:9:1",
														"nodeType": "YulTypedName",
														"src": "2816:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2828:6:1",
														"nodeType": "YulTypedName",
														"src": "2828:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2836:6:1",
														"nodeType": "YulTypedName",
														"src": "2836:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2847:4:1",
														"nodeType": "YulTypedName",
														"src": "2847:4:1",
														"type": ""
													}
												],
												"src": "2706:423:1"
											},
											{
												"body": {
													"nativeSrc": "3163:152:1",
													"nodeType": "YulBlock",
													"src": "3163:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3180:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3180:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3183:77:1",
																		"nodeType": "YulLiteral",
																		"src": "3183:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3173:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3173:6:1"
																},
																"nativeSrc": "3173:88:1",
																"nodeType": "YulFunctionCall",
																"src": "3173:88:1"
															},
															"nativeSrc": "3173:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "3173:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3277:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3277:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3280:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3280:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3270:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3270:6:1"
																},
																"nativeSrc": "3270:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3270:15:1"
															},
															"nativeSrc": "3270:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "3270:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3301:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3301:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3304:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3304:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3294:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3294:6:1"
																},
																"nativeSrc": "3294:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3294:15:1"
															},
															"nativeSrc": "3294:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "3294:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3135:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "3135:180:1"
											},
											{
												"body": {
													"nativeSrc": "3365:147:1",
													"nodeType": "YulBlock",
													"src": "3365:147:1",
													"statements": [
														{
															"nativeSrc": "3375:25:1",
															"nodeType": "YulAssignment",
															"src": "3375:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3398:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3398:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3380:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "3380:17:1"
																},
																"nativeSrc": "3380:20:1",
																"nodeType": "YulFunctionCall",
																"src": "3380:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "3375:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "3375:1:1"
																}
															]
														},
														{
															"nativeSrc": "3409:25:1",
															"nodeType": "YulAssignment",
															"src": "3409:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3432:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3432:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3414:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "3414:17:1"
																},
																"nativeSrc": "3414:20:1",
																"nodeType": "YulFunctionCall",
																"src": "3414:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "3409:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "3409:1:1"
																}
															]
														},
														{
															"nativeSrc": "3443:16:1",
															"nodeType": "YulAssignment",
															"src": "3443:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3454:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3454:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3457:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3457:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3450:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3450:3:1"
																},
																"nativeSrc": "3450:9:1",
																"nodeType": "YulFunctionCall",
																"src": "3450:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3443:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3443:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3483:22:1",
																"nodeType": "YulBlock",
																"src": "3483:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3485:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "3485:16:1"
																			},
																			"nativeSrc": "3485:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3485:18:1"
																		},
																		"nativeSrc": "3485:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3485:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3475:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3475:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3478:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3478:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3472:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3472:2:1"
																},
																"nativeSrc": "3472:10:1",
																"nodeType": "YulFunctionCall",
																"src": "3472:10:1"
															},
															"nativeSrc": "3469:36:1",
															"nodeType": "YulIf",
															"src": "3469:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3321:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3352:1:1",
														"nodeType": "YulTypedName",
														"src": "3352:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3355:1:1",
														"nodeType": "YulTypedName",
														"src": "3355:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3361:3:1",
														"nodeType": "YulTypedName",
														"src": "3361:3:1",
														"type": ""
													}
												],
												"src": "3321:191:1"
											},
											{
												"body": {
													"nativeSrc": "3632:34:1",
													"nodeType": "YulBlock",
													"src": "3632:34:1",
													"statements": [
														{
															"nativeSrc": "3642:18:1",
															"nodeType": "YulAssignment",
															"src": "3642:18:1",
															"value": {
																"name": "pos",
																"nativeSrc": "3657:3:1",
																"nodeType": "YulIdentifier",
																"src": "3657:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3642:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "3642:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "3518:148:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3604:3:1",
														"nodeType": "YulTypedName",
														"src": "3604:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3609:6:1",
														"nodeType": "YulTypedName",
														"src": "3609:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3620:11:1",
														"nodeType": "YulTypedName",
														"src": "3620:11:1",
														"type": ""
													}
												],
												"src": "3518:148:1"
											},
											{
												"body": {
													"nativeSrc": "3782:280:1",
													"nodeType": "YulBlock",
													"src": "3782:280:1",
													"statements": [
														{
															"nativeSrc": "3792:53:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3792:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3839:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3839:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3806:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "3806:32:1"
																},
																"nativeSrc": "3806:39:1",
																"nodeType": "YulFunctionCall",
																"src": "3806:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3796:6:1",
																	"nodeType": "YulTypedName",
																	"src": "3796:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3854:96:1",
															"nodeType": "YulAssignment",
															"src": "3854:96:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3938:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3938:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3943:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3943:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "3861:76:1",
																	"nodeType": "YulIdentifier",
																	"src": "3861:76:1"
																},
																"nativeSrc": "3861:89:1",
																"nodeType": "YulFunctionCall",
																"src": "3861:89:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3854:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3854:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3998:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3998:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4005:4:1",
																				"nodeType": "YulLiteral",
																				"src": "4005:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3994:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3994:3:1"
																		},
																		"nativeSrc": "3994:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3994:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "4012:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4012:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4017:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4017:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "3959:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "3959:34:1"
																},
																"nativeSrc": "3959:65:1",
																"nodeType": "YulFunctionCall",
																"src": "3959:65:1"
															},
															"nativeSrc": "3959:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "3959:65:1"
														},
														{
															"nativeSrc": "4033:23:1",
															"nodeType": "YulAssignment",
															"src": "4033:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4044:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4044:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4049:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4049:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4040:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4040:3:1"
																},
																"nativeSrc": "4040:16:1",
																"nodeType": "YulFunctionCall",
																"src": "4040:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4033:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4033:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "3672:390:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3763:5:1",
														"nodeType": "YulTypedName",
														"src": "3763:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3770:3:1",
														"nodeType": "YulTypedName",
														"src": "3770:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3778:3:1",
														"nodeType": "YulTypedName",
														"src": "3778:3:1",
														"type": ""
													}
												],
												"src": "3672:390:1"
											},
											{
												"body": {
													"nativeSrc": "4215:51:1",
													"nodeType": "YulBlock",
													"src": "4215:51:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4232:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4232:3:1"
																	},
																	{
																		"hexValue": "202d2056495020626f6e7573206170706c696564",
																		"kind": "string",
																		"nativeSrc": "4237:22:1",
																		"nodeType": "YulLiteral",
																		"src": "4237:22:1",
																		"type": "",
																		"value": " - VIP bonus applied"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4225:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4225:6:1"
																},
																"nativeSrc": "4225:35:1",
																"nodeType": "YulFunctionCall",
																"src": "4225:35:1"
															},
															"nativeSrc": "4225:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "4225:35:1"
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b90d5536f0f40eb92f24ca6ce2e2844ddcd971a91e11bda995de5ce4a350f3f2_to_t_bytes20_nonPadded_inplace_fromStack",
												"nativeSrc": "4068:198:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4210:3:1",
														"nodeType": "YulTypedName",
														"src": "4210:3:1",
														"type": ""
													}
												],
												"src": "4068:198:1"
											},
											{
												"body": {
													"nativeSrc": "4499:315:1",
													"nodeType": "YulBlock",
													"src": "4499:315:1",
													"statements": [
														{
															"nativeSrc": "4510:102:1",
															"nodeType": "YulAssignment",
															"src": "4510:102:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4599:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4599:6:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "4608:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4608:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "4517:81:1",
																	"nodeType": "YulIdentifier",
																	"src": "4517:81:1"
																},
																"nativeSrc": "4517:95:1",
																"nodeType": "YulFunctionCall",
																"src": "4517:95:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4510:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4510:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4756:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4756:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b90d5536f0f40eb92f24ca6ce2e2844ddcd971a91e11bda995de5ce4a350f3f2_to_t_bytes20_nonPadded_inplace_fromStack",
																	"nativeSrc": "4622:132:1",
																	"nodeType": "YulIdentifier",
																	"src": "4622:132:1"
																},
																"nativeSrc": "4622:138:1",
																"nodeType": "YulFunctionCall",
																"src": "4622:138:1"
															},
															"nativeSrc": "4622:138:1",
															"nodeType": "YulExpressionStatement",
															"src": "4622:138:1"
														},
														{
															"nativeSrc": "4769:19:1",
															"nodeType": "YulAssignment",
															"src": "4769:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4780:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4780:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4785:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4785:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4776:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4776:3:1"
																},
																"nativeSrc": "4776:12:1",
																"nodeType": "YulFunctionCall",
																"src": "4776:12:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4769:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4769:3:1"
																}
															]
														},
														{
															"nativeSrc": "4798:10:1",
															"nodeType": "YulAssignment",
															"src": "4798:10:1",
															"value": {
																"name": "pos",
																"nativeSrc": "4805:3:1",
																"nodeType": "YulIdentifier",
																"src": "4805:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4798:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4798:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_b90d5536f0f40eb92f24ca6ce2e2844ddcd971a91e11bda995de5ce4a350f3f2__to_t_string_memory_ptr_t_bytes20__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "4272:542:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4478:3:1",
														"nodeType": "YulTypedName",
														"src": "4478:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4484:6:1",
														"nodeType": "YulTypedName",
														"src": "4484:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4495:3:1",
														"nodeType": "YulTypedName",
														"src": "4495:3:1",
														"type": ""
													}
												],
												"src": "4272:542:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_boolt_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_stringliteral_b90d5536f0f40eb92f24ca6ce2e2844ddcd971a91e11bda995de5ce4a350f3f2_to_t_bytes20_nonPadded_inplace_fromStack(pos) {\n        mstore(pos, \" - VIP bonus applied\")\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_b90d5536f0f40eb92f24ca6ce2e2844ddcd971a91e11bda995de5ce4a350f3f2__to_t_string_memory_ptr_t_bytes20__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        abi_encode_t_stringliteral_b90d5536f0f40eb92f24ca6ce2e2844ddcd971a91e11bda995de5ce4a350f3f2_to_t_bytes20_nonPadded_inplace_fromStack( pos)\n        pos := add(pos, 20)\n\n        end := pos\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610029575f3560e01c80632d91e4581461002d575b5f5ffd5b61004760048036038101906100429190610279565b61005e565b604051610055929190610348565b60405180910390f35b5f6060600385116100a9575f6040518060400160405280601b81526020017f4e6f207061796f7574202d2044656c617920746f6f2073686f7274000000000081525091509150610205565b60078311156100d5575f60405180606001604052806022815260200161045c6022913991509150610205565b5f6060600687101561012257601991506040518060400160405280600881526020017f417070726f76656400000000000000000000000000000000000000000000000081525090506101aa565b600c87101561016c57603291506040518060400160405280600881526020017f417070726f76656400000000000000000000000000000000000000000000000081525090506101a9565b606491506040518060400160405280600881526020017f417070726f76656400000000000000000000000000000000000000000000000081525090505b5b8580156101b757505f8214155b156101fc57600a826101c991906103a3565b9150606e8211156101d957606e91505b806040516020016101ea9190610436565b60405160208183030381529060405290505b81819350935050505b935093915050565b5f5ffd5b5f819050919050565b61022381610211565b811461022d575f5ffd5b50565b5f8135905061023e8161021a565b92915050565b5f8115159050919050565b61025881610244565b8114610262575f5ffd5b50565b5f813590506102738161024f565b92915050565b5f5f5f606084860312156102905761028f61020d565b5b5f61029d86828701610230565b93505060206102ae86828701610265565b92505060406102bf86828701610230565b9150509250925092565b6102d281610211565b82525050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61031a826102d8565b61032481856102e2565b93506103348185602086016102f2565b61033d81610300565b840191505092915050565b5f60408201905061035b5f8301856102c9565b818103602083015261036d8184610310565b90509392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6103ad82610211565b91506103b883610211565b92508282019050808211156103d0576103cf610376565b5b92915050565b5f81905092915050565b5f6103ea826102d8565b6103f481856103d6565b93506104048185602086016102f2565b80840191505092915050565b7f202d2056495020626f6e7573206170706c696564000000000000000000000000815250565b5f61044182846103e0565b915061044c82610410565b6014820191508190509291505056fe436c61696d20696e76616c6964202d207375626d697474656420746f6f206c617465a2646970667358221220f8ec6e6dbb832999253cf45e7a5d079437c6893d3dcb40d2fbbd64d6bae9eb6764736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2D91E458 EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x279 JUMP JUMPDEST PUSH2 0x5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55 SWAP3 SWAP2 SWAP1 PUSH2 0x348 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x60 PUSH1 0x3 DUP6 GT PUSH2 0xA9 JUMPI PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E6F207061796F7574202D2044656C617920746F6F2073686F72740000000000 DUP2 MSTORE POP SWAP2 POP SWAP2 POP PUSH2 0x205 JUMP JUMPDEST PUSH1 0x7 DUP4 GT ISZERO PUSH2 0xD5 JUMPI PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x45C PUSH1 0x22 SWAP2 CODECOPY SWAP2 POP SWAP2 POP PUSH2 0x205 JUMP JUMPDEST PUSH0 PUSH1 0x60 PUSH1 0x6 DUP8 LT ISZERO PUSH2 0x122 JUMPI PUSH1 0x19 SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x417070726F766564000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x1AA JUMP JUMPDEST PUSH1 0xC DUP8 LT ISZERO PUSH2 0x16C JUMPI PUSH1 0x32 SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x417070726F766564000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x1A9 JUMP JUMPDEST PUSH1 0x64 SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x417070726F766564000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP JUMPDEST JUMPDEST DUP6 DUP1 ISZERO PUSH2 0x1B7 JUMPI POP PUSH0 DUP3 EQ ISZERO JUMPDEST ISZERO PUSH2 0x1FC JUMPI PUSH1 0xA DUP3 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x3A3 JUMP JUMPDEST SWAP2 POP PUSH1 0x6E DUP3 GT ISZERO PUSH2 0x1D9 JUMPI PUSH1 0x6E SWAP2 POP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x436 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP JUMPDEST DUP2 DUP2 SWAP4 POP SWAP4 POP POP POP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x223 DUP2 PUSH2 0x211 JUMP JUMPDEST DUP2 EQ PUSH2 0x22D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x23E DUP2 PUSH2 0x21A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x258 DUP2 PUSH2 0x244 JUMP JUMPDEST DUP2 EQ PUSH2 0x262 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x273 DUP2 PUSH2 0x24F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x290 JUMPI PUSH2 0x28F PUSH2 0x20D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x29D DUP7 DUP3 DUP8 ADD PUSH2 0x230 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2AE DUP7 DUP3 DUP8 ADD PUSH2 0x265 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2BF DUP7 DUP3 DUP8 ADD PUSH2 0x230 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2D2 DUP2 PUSH2 0x211 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x31A DUP3 PUSH2 0x2D8 JUMP JUMPDEST PUSH2 0x324 DUP2 DUP6 PUSH2 0x2E2 JUMP JUMPDEST SWAP4 POP PUSH2 0x334 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2F2 JUMP JUMPDEST PUSH2 0x33D DUP2 PUSH2 0x300 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x35B PUSH0 DUP4 ADD DUP6 PUSH2 0x2C9 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x36D DUP2 DUP5 PUSH2 0x310 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x3AD DUP3 PUSH2 0x211 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B8 DUP4 PUSH2 0x211 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3D0 JUMPI PUSH2 0x3CF PUSH2 0x376 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3EA DUP3 PUSH2 0x2D8 JUMP JUMPDEST PUSH2 0x3F4 DUP2 DUP6 PUSH2 0x3D6 JUMP JUMPDEST SWAP4 POP PUSH2 0x404 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2F2 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x202D2056495020626F6E7573206170706C696564000000000000000000000000 DUP2 MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x441 DUP3 DUP5 PUSH2 0x3E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x44C DUP3 PUSH2 0x410 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID NUMBER PUSH13 0x61696D20696E76616C6964202D KECCAK256 PUSH20 0x75626D697474656420746F6F206C617465A26469 PUSH17 0x667358221220F8EC6E6DBB832999253CF4 MCOPY PUSH27 0x5D079437C6893D3DCB40D2FBBD64D6BAE9EB6764736F6C63430008 0x1E STOP CALLER ",
							"sourceMap": "79:997:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;104:969;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;187:4;192:13;235:1;221:10;:15;217:89;;261:1;253:41;;;;;;;;;;;;;;;;;;;;;;;217:89;339:1;322:14;:18;318:99;;;365:1;357:48;;;;;;;;;;;;;;;;;;;;;;;318:99;427:18;456:20;513:1;500:10;:14;497:291;;;544:2;530:16;;561:17;;;;;;;;;;;;;;;;;;;497:291;;;620:2;609:10;:13;605:183;;;652:2;638:16;;669:17;;;;;;;;;;;;;;;;;;;605:183;;;741:3;727:17;;759;;;;;;;;;;;;;;;;;;;605:183;497:291;803:5;:25;;;;;827:1;812:13;:16;;803:25;800:227;;;860:2;845:17;;;;;:::i;:::-;;;894:3;880:13;:17;877:73;;;931:3;917:17;;877:73;985:6;971:44;;;;;;;;:::i;:::-;;;;;;;;;;;;;964:51;;800:227;1044:13;1058:6;1037:28;;;;;;104:969;;;;;;;:::o;88:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:90::-;724:7;767:5;760:13;753:21;742:32;;690:90;;;:::o;786:116::-;856:21;871:5;856:21;:::i;:::-;849:5;846:32;836:60;;892:1;889;882:12;836:60;786:116;:::o;908:133::-;951:5;989:6;976:20;967:29;;1005:30;1029:5;1005:30;:::i;:::-;908:133;;;;:::o;1047:613::-;1121:6;1129;1137;1186:2;1174:9;1165:7;1161:23;1157:32;1154:119;;;1192:79;;:::i;:::-;1154:119;1312:1;1337:53;1382:7;1373:6;1362:9;1358:22;1337:53;:::i;:::-;1327:63;;1283:117;1439:2;1465:50;1507:7;1498:6;1487:9;1483:22;1465:50;:::i;:::-;1455:60;;1410:115;1564:2;1590:53;1635:7;1626:6;1615:9;1611:22;1590:53;:::i;:::-;1580:63;;1535:118;1047:613;;;;;:::o;1666:118::-;1753:24;1771:5;1753:24;:::i;:::-;1748:3;1741:37;1666:118;;:::o;1790:99::-;1842:6;1876:5;1870:12;1860:22;;1790:99;;;:::o;1895:169::-;1979:11;2013:6;2008:3;2001:19;2053:4;2048:3;2044:14;2029:29;;1895:169;;;;:::o;2070:139::-;2159:6;2154:3;2149;2143:23;2200:1;2191:6;2186:3;2182:16;2175:27;2070:139;;;:::o;2215:102::-;2256:6;2307:2;2303:7;2298:2;2291:5;2287:14;2283:28;2273:38;;2215:102;;;:::o;2323:377::-;2411:3;2439:39;2472:5;2439:39;:::i;:::-;2494:71;2558:6;2553:3;2494:71;:::i;:::-;2487:78;;2574:65;2632:6;2627:3;2620:4;2613:5;2609:16;2574:65;:::i;:::-;2664:29;2686:6;2664:29;:::i;:::-;2659:3;2655:39;2648:46;;2415:285;2323:377;;;;:::o;2706:423::-;2847:4;2885:2;2874:9;2870:18;2862:26;;2898:71;2966:1;2955:9;2951:17;2942:6;2898:71;:::i;:::-;3016:9;3010:4;3006:20;3001:2;2990:9;2986:18;2979:48;3044:78;3117:4;3108:6;3044:78;:::i;:::-;3036:86;;2706:423;;;;;:::o;3135:180::-;3183:77;3180:1;3173:88;3280:4;3277:1;3270:15;3304:4;3301:1;3294:15;3321:191;3361:3;3380:20;3398:1;3380:20;:::i;:::-;3375:25;;3414:20;3432:1;3414:20;:::i;:::-;3409:25;;3457:1;3454;3450:9;3443:16;;3478:3;3475:1;3472:10;3469:36;;;3485:18;;:::i;:::-;3469:36;3321:191;;;;:::o;3518:148::-;3620:11;3657:3;3642:18;;3518:148;;;;:::o;3672:390::-;3778:3;3806:39;3839:5;3806:39;:::i;:::-;3861:89;3943:6;3938:3;3861:89;:::i;:::-;3854:96;;3959:65;4017:6;4012:3;4005:4;3998:5;3994:16;3959:65;:::i;:::-;4049:6;4044:3;4040:16;4033:23;;3782:280;3672:390;;;;:::o;4068:198::-;4237:22;4232:3;4225:35;4068:198;:::o;4272:542::-;4495:3;4517:95;4608:3;4599:6;4517:95;:::i;:::-;4510:102;;4622:138;4756:3;4622:138;:::i;:::-;4785:2;4780:3;4776:12;4769:19;;4805:3;4798:10;;4272:542;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "240600",
								"executionCost": "279",
								"totalCost": "240879"
							},
							"external": {
								"claim(uint256,bool,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 79,
									"end": 1076,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 79,
									"end": 1076,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 79,
									"end": 1076,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 79,
									"end": 1076,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 79,
									"end": 1076,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 79,
									"end": 1076,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 79,
									"end": 1076,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 79,
									"end": 1076,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 79,
									"end": 1076,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 79,
									"end": 1076,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 79,
									"end": 1076,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 79,
									"end": 1076,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 79,
									"end": 1076,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 79,
									"end": 1076,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 79,
									"end": 1076,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 79,
									"end": 1076,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 79,
									"end": 1076,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 79,
									"end": 1076,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 79,
									"end": 1076,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 79,
									"end": 1076,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 79,
									"end": 1076,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f8ec6e6dbb832999253cf45e7a5d079437c6893d3dcb40d2fbbd64d6bae9eb6764736f6c634300081e0033",
									".code": [
										{
											"begin": 79,
											"end": 1076,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 79,
											"end": 1076,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 79,
											"end": 1076,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 79,
											"end": 1076,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 79,
											"end": 1076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79,
											"end": 1076,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 79,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 79,
											"end": 1076,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79,
											"end": 1076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 79,
											"end": 1076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 79,
											"end": 1076,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 79,
											"end": 1076,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 79,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79,
											"end": 1076,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 79,
											"end": 1076,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 79,
											"end": 1076,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 79,
											"end": 1076,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 79,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 79,
											"end": 1076,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79,
											"end": 1076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 79,
											"end": 1076,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 79,
											"end": 1076,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 79,
											"end": 1076,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 79,
											"end": 1076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79,
											"end": 1076,
											"name": "PUSH",
											"source": 0,
											"value": "2D91E458"
										},
										{
											"begin": 79,
											"end": 1076,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 79,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 79,
											"end": 1076,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79,
											"end": 1076,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 79,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79,
											"end": 1076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 79,
											"end": 1076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 79,
											"end": 1076,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1073,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 104,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 104,
											"end": 1073,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 104,
											"end": 1073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1073,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1073,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1073,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1073,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 104,
											"end": 1073,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 104,
											"end": 1073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1073,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 104,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 104,
											"end": 1073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1073,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 104,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1073,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 104,
											"end": 1073,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 104,
											"end": 1073,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1073,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 104,
											"end": 1073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1073,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 104,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1073,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 104,
											"end": 1073,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1073,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1073,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1073,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1073,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 104,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 187,
											"end": 191,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 205,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 235,
											"end": 236,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 221,
											"end": 231,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 221,
											"end": 236,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 217,
											"end": 306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 217,
											"end": 306,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 261,
											"end": 262,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 253,
											"end": 294,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 253,
											"end": 294,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 253,
											"end": 294,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 253,
											"end": 294,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 253,
											"end": 294,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 253,
											"end": 294,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 253,
											"end": 294,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 253,
											"end": 294,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 253,
											"end": 294,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 253,
											"end": 294,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 253,
											"end": 294,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 253,
											"end": 294,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 253,
											"end": 294,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 253,
											"end": 294,
											"name": "PUSH",
											"source": 0,
											"value": "4E6F207061796F7574202D2044656C617920746F6F2073686F72740000000000"
										},
										{
											"begin": 253,
											"end": 294,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 253,
											"end": 294,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 253,
											"end": 294,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 253,
											"end": 294,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 253,
											"end": 294,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 253,
											"end": 294,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 253,
											"end": 294,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 253,
											"end": 294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 253,
											"end": 294,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 217,
											"end": 306,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 217,
											"end": 306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 339,
											"end": 340,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 322,
											"end": 336,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 322,
											"end": 340,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 318,
											"end": 417,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 318,
											"end": 417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 318,
											"end": 417,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 365,
											"end": 366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 405,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 357,
											"end": 405,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 357,
											"end": 405,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 357,
											"end": 405,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 357,
											"end": 405,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 357,
											"end": 405,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 357,
											"end": 405,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 357,
											"end": 405,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 357,
											"end": 405,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 357,
											"end": 405,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 357,
											"end": 405,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 357,
											"end": 405,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 357,
											"end": 405,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 357,
											"end": 405,
											"name": "PUSH data",
											"source": 0,
											"value": "DD0206810208551D23409D8D0159D19EB3D3A8321C02D36157D0C73845271DD0"
										},
										{
											"begin": 357,
											"end": 405,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 357,
											"end": 405,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 357,
											"end": 405,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 357,
											"end": 405,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 357,
											"end": 405,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 357,
											"end": 405,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 357,
											"end": 405,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 357,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 357,
											"end": 405,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 318,
											"end": 417,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 318,
											"end": 417,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 427,
											"end": 445,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 456,
											"end": 476,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 513,
											"end": 514,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 500,
											"end": 510,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 500,
											"end": 514,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 497,
											"end": 788,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 497,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 497,
											"end": 788,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 544,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 530,
											"end": 546,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 530,
											"end": 546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 561,
											"end": 578,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 561,
											"end": 578,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 561,
											"end": 578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 561,
											"end": 578,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 561,
											"end": 578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 561,
											"end": 578,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 561,
											"end": 578,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 561,
											"end": 578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 561,
											"end": 578,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 561,
											"end": 578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 561,
											"end": 578,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 561,
											"end": 578,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 561,
											"end": 578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 561,
											"end": 578,
											"name": "PUSH",
											"source": 0,
											"value": "417070726F766564000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 561,
											"end": 578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 561,
											"end": 578,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 561,
											"end": 578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 561,
											"end": 578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 561,
											"end": 578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 497,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 497,
											"end": 788,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 497,
											"end": 788,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 497,
											"end": 788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 620,
											"end": 622,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 609,
											"end": 619,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 609,
											"end": 622,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 605,
											"end": 788,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 605,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 605,
											"end": 788,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 652,
											"end": 654,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 638,
											"end": 654,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 638,
											"end": 654,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 669,
											"end": 686,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 669,
											"end": 686,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 669,
											"end": 686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 669,
											"end": 686,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 669,
											"end": 686,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 669,
											"end": 686,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 669,
											"end": 686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 669,
											"end": 686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 669,
											"end": 686,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 669,
											"end": 686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 669,
											"end": 686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 669,
											"end": 686,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 669,
											"end": 686,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 669,
											"end": 686,
											"name": "PUSH",
											"source": 0,
											"value": "417070726F766564000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 669,
											"end": 686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 669,
											"end": 686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 669,
											"end": 686,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 669,
											"end": 686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 669,
											"end": 686,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 605,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 605,
											"end": 788,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 605,
											"end": 788,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 605,
											"end": 788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 741,
											"end": 744,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 727,
											"end": 744,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 727,
											"end": 744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 759,
											"end": 776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 759,
											"end": 776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 759,
											"end": 776,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH",
											"source": 0,
											"value": "417070726F766564000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 759,
											"end": 776,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 759,
											"end": 776,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 759,
											"end": 776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 759,
											"end": 776,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 605,
											"end": 788,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 605,
											"end": 788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 497,
											"end": 788,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 497,
											"end": 788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 803,
											"end": 808,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 803,
											"end": 828,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 803,
											"end": 828,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 803,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 803,
											"end": 828,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 803,
											"end": 828,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 827,
											"end": 828,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 812,
											"end": 825,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 812,
											"end": 828,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 812,
											"end": 828,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 803,
											"end": 828,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 803,
											"end": 828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 800,
											"end": 1027,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 800,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 800,
											"end": 1027,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 860,
											"end": 862,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 845,
											"end": 862,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 845,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 845,
											"end": 862,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 845,
											"end": 862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 845,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 845,
											"end": 862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 845,
											"end": 862,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 845,
											"end": 862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 845,
											"end": 862,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 845,
											"end": 862,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 894,
											"end": 897,
											"name": "PUSH",
											"source": 0,
											"value": "6E"
										},
										{
											"begin": 880,
											"end": 893,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 880,
											"end": 897,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 877,
											"end": 950,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 877,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 877,
											"end": 950,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 931,
											"end": 934,
											"name": "PUSH",
											"source": 0,
											"value": "6E"
										},
										{
											"begin": 917,
											"end": 934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 917,
											"end": 934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 877,
											"end": 950,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 877,
											"end": 950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 971,
											"end": 1015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 971,
											"end": 1015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 971,
											"end": 1015,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 971,
											"end": 1015,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 971,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 971,
											"end": 1015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 971,
											"end": 1015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 971,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 971,
											"end": 1015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 971,
											"end": 1015,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 971,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 971,
											"end": 1015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 971,
											"end": 1015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 971,
											"end": 1015,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 971,
											"end": 1015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 971,
											"end": 1015,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 971,
											"end": 1015,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 971,
											"end": 1015,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 971,
											"end": 1015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 971,
											"end": 1015,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 971,
											"end": 1015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 971,
											"end": 1015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 971,
											"end": 1015,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 964,
											"end": 1015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 964,
											"end": 1015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 800,
											"end": 1027,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 800,
											"end": 1027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1044,
											"end": 1057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1058,
											"end": 1064,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1065,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1065,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1065,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1065,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1065,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1065,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1073,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 104,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1073,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1073,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1073,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 780,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 690,
											"end": 780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 724,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 767,
											"end": 772,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 760,
											"end": 773,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 753,
											"end": 774,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 742,
											"end": 774,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 742,
											"end": 774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 780,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 690,
											"end": 780,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 690,
											"end": 780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 786,
											"end": 902,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 786,
											"end": 902,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 856,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 871,
											"end": 876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 856,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 856,
											"end": 877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 856,
											"end": 877,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 856,
											"end": 877,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 849,
											"end": 854,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 846,
											"end": 878,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 836,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 836,
											"end": 896,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 892,
											"end": 893,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 889,
											"end": 890,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 882,
											"end": 894,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 836,
											"end": 896,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 836,
											"end": 896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 786,
											"end": 902,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 786,
											"end": 902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 908,
											"end": 1041,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 908,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 951,
											"end": 956,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 989,
											"end": 995,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 976,
											"end": 996,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 967,
											"end": 996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 967,
											"end": 996,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1035,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1029,
											"end": 1034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1035,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1005,
											"end": 1035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1035,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1005,
											"end": 1035,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 908,
											"end": 1041,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 908,
											"end": 1041,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 908,
											"end": 1041,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 908,
											"end": 1041,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 908,
											"end": 1041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1660,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1047,
											"end": 1660,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1129,
											"end": 1135,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1137,
											"end": 1143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1186,
											"end": 1188,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1174,
											"end": 1183,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1165,
											"end": 1172,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1184,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1157,
											"end": 1189,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1154,
											"end": 1273,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1154,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1154,
											"end": 1273,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1192,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1192,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1192,
											"end": 1271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1192,
											"end": 1271,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1192,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1154,
											"end": 1273,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1154,
											"end": 1273,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1312,
											"end": 1313,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1337,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1382,
											"end": 1389,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1373,
											"end": 1379,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1362,
											"end": 1371,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1337,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1337,
											"end": 1390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1337,
											"end": 1390,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1337,
											"end": 1390,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1390,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1390,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1439,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1465,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1507,
											"end": 1514,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1504,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1487,
											"end": 1496,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1505,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1465,
											"end": 1515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1515,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1465,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1455,
											"end": 1515,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1455,
											"end": 1515,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1410,
											"end": 1525,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1564,
											"end": 1566,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1590,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1635,
											"end": 1642,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1626,
											"end": 1632,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1624,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1633,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1590,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1590,
											"end": 1643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1590,
											"end": 1643,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1590,
											"end": 1643,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1580,
											"end": 1643,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1580,
											"end": 1643,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1653,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1660,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1660,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1660,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1660,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1660,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1666,
											"end": 1784,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1666,
											"end": 1784,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1753,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1771,
											"end": 1776,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1753,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1753,
											"end": 1777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1753,
											"end": 1777,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1753,
											"end": 1777,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1748,
											"end": 1751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1741,
											"end": 1778,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1666,
											"end": 1784,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1666,
											"end": 1784,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1666,
											"end": 1784,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1790,
											"end": 1889,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1790,
											"end": 1889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1842,
											"end": 1848,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1881,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1870,
											"end": 1882,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 1882,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 1882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1790,
											"end": 1889,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1790,
											"end": 1889,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1790,
											"end": 1889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1790,
											"end": 1889,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 2064,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1895,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2019,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2011,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2020,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2057,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2048,
											"end": 2051,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2044,
											"end": 2058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2058,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 2064,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 2064,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 2064,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 2064,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 2064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2070,
											"end": 2209,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2070,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2159,
											"end": 2165,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2157,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2152,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2166,
											"name": "MCOPY",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2201,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2191,
											"end": 2197,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2186,
											"end": 2189,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2182,
											"end": 2198,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2175,
											"end": 2202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2070,
											"end": 2209,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2070,
											"end": 2209,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2070,
											"end": 2209,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2070,
											"end": 2209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2215,
											"end": 2317,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2215,
											"end": 2317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2307,
											"end": 2309,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2303,
											"end": 2310,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2300,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2291,
											"end": 2296,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2301,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2311,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2273,
											"end": 2311,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2273,
											"end": 2311,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2215,
											"end": 2317,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2215,
											"end": 2317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2215,
											"end": 2317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2215,
											"end": 2317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2323,
											"end": 2700,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2323,
											"end": 2700,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2411,
											"end": 2414,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2439,
											"end": 2478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2472,
											"end": 2477,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2439,
											"end": 2478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2439,
											"end": 2478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2439,
											"end": 2478,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2439,
											"end": 2478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2558,
											"end": 2564,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2556,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2494,
											"end": 2565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2565,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2494,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2487,
											"end": 2565,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2487,
											"end": 2565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2574,
											"end": 2639,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2632,
											"end": 2638,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2630,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2624,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2613,
											"end": 2618,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2609,
											"end": 2625,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2574,
											"end": 2639,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2574,
											"end": 2639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2574,
											"end": 2639,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2574,
											"end": 2639,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2664,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2686,
											"end": 2692,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2664,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2664,
											"end": 2693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2664,
											"end": 2693,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2664,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2659,
											"end": 2662,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2655,
											"end": 2694,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2694,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2415,
											"end": 2700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2323,
											"end": 2700,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2323,
											"end": 2700,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2323,
											"end": 2700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2323,
											"end": 2700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2323,
											"end": 2700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2706,
											"end": 3129,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2706,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2847,
											"end": 2851,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2885,
											"end": 2887,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2874,
											"end": 2883,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2870,
											"end": 2888,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2862,
											"end": 2888,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2862,
											"end": 2888,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2966,
											"end": 2967,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2955,
											"end": 2964,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2951,
											"end": 2968,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2942,
											"end": 2948,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2898,
											"end": 2969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2969,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2898,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3025,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3014,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3006,
											"end": 3026,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3001,
											"end": 3003,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2990,
											"end": 2999,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2986,
											"end": 3004,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2979,
											"end": 3027,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3044,
											"end": 3122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3117,
											"end": 3121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3108,
											"end": 3114,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3044,
											"end": 3122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3044,
											"end": 3122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3044,
											"end": 3122,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3044,
											"end": 3122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3036,
											"end": 3122,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3036,
											"end": 3122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2706,
											"end": 3129,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2706,
											"end": 3129,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2706,
											"end": 3129,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2706,
											"end": 3129,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2706,
											"end": 3129,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2706,
											"end": 3129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3315,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3135,
											"end": 3315,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3183,
											"end": 3260,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3180,
											"end": 3181,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3173,
											"end": 3261,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3280,
											"end": 3284,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3277,
											"end": 3278,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3270,
											"end": 3285,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3308,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3301,
											"end": 3302,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3294,
											"end": 3309,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3321,
											"end": 3512,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3321,
											"end": 3512,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3361,
											"end": 3364,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3380,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3398,
											"end": 3399,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3380,
											"end": 3400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3400,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3380,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3375,
											"end": 3400,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3375,
											"end": 3400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3414,
											"end": 3434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3432,
											"end": 3433,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3414,
											"end": 3434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3414,
											"end": 3434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3414,
											"end": 3434,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3414,
											"end": 3434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3409,
											"end": 3434,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3409,
											"end": 3434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3457,
											"end": 3458,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3454,
											"end": 3455,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3459,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3459,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3459,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3478,
											"end": 3481,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3475,
											"end": 3476,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3472,
											"end": 3482,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3469,
											"end": 3505,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3469,
											"end": 3505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3469,
											"end": 3505,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3485,
											"end": 3503,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3485,
											"end": 3503,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3485,
											"end": 3503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3485,
											"end": 3503,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3485,
											"end": 3503,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3469,
											"end": 3505,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3469,
											"end": 3505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3321,
											"end": 3512,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3321,
											"end": 3512,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3321,
											"end": 3512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3321,
											"end": 3512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3321,
											"end": 3512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3518,
											"end": 3666,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3518,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3620,
											"end": 3631,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3660,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3642,
											"end": 3660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3642,
											"end": 3660,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3518,
											"end": 3666,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3518,
											"end": 3666,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3518,
											"end": 3666,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3518,
											"end": 3666,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3518,
											"end": 3666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3672,
											"end": 4062,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3672,
											"end": 4062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 3781,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3806,
											"end": 3845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3839,
											"end": 3844,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3806,
											"end": 3845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3806,
											"end": 3845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3806,
											"end": 3845,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3806,
											"end": 3845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3861,
											"end": 3950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3943,
											"end": 3949,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 3941,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3861,
											"end": 3950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3861,
											"end": 3950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3861,
											"end": 3950,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3861,
											"end": 3950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3854,
											"end": 3950,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3854,
											"end": 3950,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3959,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 4017,
											"end": 4023,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4012,
											"end": 4015,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4005,
											"end": 4009,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3998,
											"end": 4003,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3994,
											"end": 4010,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3959,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3959,
											"end": 4024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3959,
											"end": 4024,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3959,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4049,
											"end": 4055,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4044,
											"end": 4047,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4040,
											"end": 4056,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4033,
											"end": 4056,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4033,
											"end": 4056,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3782,
											"end": 4062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3672,
											"end": 4062,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3672,
											"end": 4062,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3672,
											"end": 4062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3672,
											"end": 4062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3672,
											"end": 4062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4068,
											"end": 4266,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4068,
											"end": 4266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4237,
											"end": 4259,
											"name": "PUSH",
											"source": 1,
											"value": "202D2056495020626F6E7573206170706C696564000000000000000000000000"
										},
										{
											"begin": 4232,
											"end": 4235,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4260,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4068,
											"end": 4266,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4068,
											"end": 4266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4272,
											"end": 4814,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 4272,
											"end": 4814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4495,
											"end": 4498,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4517,
											"end": 4612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 4608,
											"end": 4611,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4599,
											"end": 4605,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4517,
											"end": 4612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4517,
											"end": 4612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4517,
											"end": 4612,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 4517,
											"end": 4612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4612,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4612,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4622,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 4756,
											"end": 4759,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4622,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4622,
											"end": 4760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4622,
											"end": 4760,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 4622,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4785,
											"end": 4787,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 4780,
											"end": 4783,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 4788,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4769,
											"end": 4788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4769,
											"end": 4788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4805,
											"end": 4808,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4798,
											"end": 4808,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4798,
											"end": 4808,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4272,
											"end": 4814,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4272,
											"end": 4814,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4272,
											"end": 4814,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4272,
											"end": 4814,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4272,
											"end": 4814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									],
									".data": {
										"DD0206810208551D23409D8D0159D19EB3D3A8321C02D36157D0C73845271DD0": "436c61696d20696e76616c6964202d207375626d697474656420746f6f206c617465"
									}
								}
							},
							"sourceList": [
								"Bones-of-Bitcoin/contracts/conditional/hard.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"claim(uint256,bool,uint256)": "2d91e458"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"delayHours\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isVIP\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"dayAfterFlight\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Bones-of-Bitcoin/contracts/conditional/hard.sol\":\"Insurance\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Bones-of-Bitcoin/contracts/conditional/hard.sol\":{\"keccak256\":\"0x873623b09581949bbc201864b151ce4a582d048afad13c2f1003accfbf5aa544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://158d5ba60b15c55cd6cb34fcbaa9389ba959e5b328533c2023ac31d70927f743\",\"dweb:/ipfs/QmTr679ik6aZDFjZXEpbTK3CCSEEJP9AMRe3yrDfTQEk6r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Bones-of-Bitcoin/contracts/conditional/hard.sol": {
				"ast": {
					"absolutePath": "Bones-of-Bitcoin/contracts/conditional/hard.sol",
					"exportedSymbols": {
						"Insurance": [
							108
						]
					},
					"id": 109,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "52:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Insurance",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 108,
							"linearizedBaseContracts": [
								108
							],
							"name": "Insurance",
							"nameLocation": "88:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "206:867:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 14,
														"name": "delayHours",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "221:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "33",
														"id": 15,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "235:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "221:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 22,
												"nodeType": "IfStatement",
												"src": "217:89:0",
												"trueBody": {
													"id": 21,
													"nodeType": "Block",
													"src": "238:68:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "30",
																		"id": 17,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "261:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"hexValue": "4e6f207061796f7574202d2044656c617920746f6f2073686f7274",
																		"id": 18,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "264:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3a71f43d0c885d733be2f57c56019f25d830f002ed1dab972f3cb97ec1449758",
																			"typeString": "literal_string \"No payout - Delay too short\""
																		},
																		"value": "No payout - Delay too short"
																	}
																],
																"id": 19,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "260:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_stringliteral_3a71f43d0c885d733be2f57c56019f25d830f002ed1dab972f3cb97ec1449758_$",
																	"typeString": "tuple(int_const 0,literal_string \"No payout - Delay too short\")"
																}
															},
															"functionReturnParameters": 13,
															"id": 20,
															"nodeType": "Return",
															"src": "253:41:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 23,
														"name": "dayAfterFlight",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "322:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "37",
														"id": 24,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "339:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_7_by_1",
															"typeString": "int_const 7"
														},
														"value": "7"
													},
													"src": "322:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 31,
												"nodeType": "IfStatement",
												"src": "318:99:0",
												"trueBody": {
													"id": 30,
													"nodeType": "Block",
													"src": "342:75:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "30",
																		"id": 26,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "365:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"hexValue": "436c61696d20696e76616c6964202d207375626d697474656420746f6f206c617465",
																		"id": 27,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "368:36:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_dd0206810208551d23409d8d0159d19eb3d3a8321c02d36157d0c73845271dd0",
																			"typeString": "literal_string \"Claim invalid - submitted too late\""
																		},
																		"value": "Claim invalid - submitted too late"
																	}
																],
																"id": 28,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "364:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_stringliteral_dd0206810208551d23409d8d0159d19eb3d3a8321c02d36157d0c73845271dd0_$",
																	"typeString": "tuple(int_const 0,literal_string \"Claim invalid - submitted too late\")"
																}
															},
															"functionReturnParameters": 13,
															"id": 29,
															"nodeType": "Return",
															"src": "357:48:0"
														}
													]
												}
											},
											{
												"assignments": [
													33
												],
												"declarations": [
													{
														"constant": false,
														"id": 33,
														"mutability": "mutable",
														"name": "payoutPercent",
														"nameLocation": "432:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "427:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 32,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "427:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 34,
												"nodeType": "VariableDeclarationStatement",
												"src": "427:18:0"
											},
											{
												"assignments": [
													36
												],
												"declarations": [
													{
														"constant": false,
														"id": 36,
														"mutability": "mutable",
														"name": "status",
														"nameLocation": "470:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "456:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 35,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "456:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 37,
												"nodeType": "VariableDeclarationStatement",
												"src": "456:20:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 38,
														"name": "delayHours",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "500:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "36",
														"id": 39,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "513:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_6_by_1",
															"typeString": "int_const 6"
														},
														"value": "6"
													},
													"src": "500:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 50,
															"name": "delayHours",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "609:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "3132",
															"id": 51,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "620:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_12_by_1",
																"typeString": "int_const 12"
															},
															"value": "12"
														},
														"src": "609:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 70,
														"nodeType": "Block",
														"src": "712:76:0",
														"statements": [
															{
																"expression": {
																	"id": 64,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 62,
																		"name": "payoutPercent",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 33,
																		"src": "727:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "313030",
																		"id": 63,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "741:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	},
																	"src": "727:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 65,
																"nodeType": "ExpressionStatement",
																"src": "727:17:0"
															},
															{
																"expression": {
																	"id": 68,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 66,
																		"name": "status",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 36,
																		"src": "759:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "417070726f766564",
																		"id": 67,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "766:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_2d894534fcdd19a4095fe0596a431ecd8cbe219bf4d17bc3ee9f8783a260daeb",
																			"typeString": "literal_string \"Approved\""
																		},
																		"value": "Approved"
																	},
																	"src": "759:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"id": 69,
																"nodeType": "ExpressionStatement",
																"src": "759:17:0"
															}
														]
													},
													"id": 71,
													"nodeType": "IfStatement",
													"src": "605:183:0",
													"trueBody": {
														"id": 61,
														"nodeType": "Block",
														"src": "623:75:0",
														"statements": [
															{
																"expression": {
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 53,
																		"name": "payoutPercent",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 33,
																		"src": "638:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "3530",
																		"id": 54,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "652:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_50_by_1",
																			"typeString": "int_const 50"
																		},
																		"value": "50"
																	},
																	"src": "638:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 56,
																"nodeType": "ExpressionStatement",
																"src": "638:16:0"
															},
															{
																"expression": {
																	"id": 59,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 57,
																		"name": "status",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 36,
																		"src": "669:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "417070726f766564",
																		"id": 58,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "676:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_2d894534fcdd19a4095fe0596a431ecd8cbe219bf4d17bc3ee9f8783a260daeb",
																			"typeString": "literal_string \"Approved\""
																		},
																		"value": "Approved"
																	},
																	"src": "669:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"id": 60,
																"nodeType": "ExpressionStatement",
																"src": "669:17:0"
															}
														]
													}
												},
												"id": 72,
												"nodeType": "IfStatement",
												"src": "497:291:0",
												"trueBody": {
													"id": 49,
													"nodeType": "Block",
													"src": "515:75:0",
													"statements": [
														{
															"expression": {
																"id": 43,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 41,
																	"name": "payoutPercent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 33,
																	"src": "530:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "3235",
																	"id": 42,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "544:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_25_by_1",
																		"typeString": "int_const 25"
																	},
																	"value": "25"
																},
																"src": "530:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 44,
															"nodeType": "ExpressionStatement",
															"src": "530:16:0"
														},
														{
															"expression": {
																"id": 47,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 45,
																	"name": "status",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 36,
																	"src": "561:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "417070726f766564",
																	"id": 46,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "568:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2d894534fcdd19a4095fe0596a431ecd8cbe219bf4d17bc3ee9f8783a260daeb",
																		"typeString": "literal_string \"Approved\""
																	},
																	"value": "Approved"
																},
																"src": "561:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 48,
															"nodeType": "ExpressionStatement",
															"src": "561:17:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 73,
														"name": "isVIP",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "803:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 76,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 74,
															"name": "payoutPercent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "812:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "827:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "812:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "803:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 101,
												"nodeType": "IfStatement",
												"src": "800:227:0",
												"trueBody": {
													"id": 100,
													"nodeType": "Block",
													"src": "830:197:0",
													"statements": [
														{
															"expression": {
																"id": 80,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 78,
																	"name": "payoutPercent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 33,
																	"src": "845:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "860:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "845:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 81,
															"nodeType": "ExpressionStatement",
															"src": "845:17:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 84,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 82,
																	"name": "payoutPercent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 33,
																	"src": "880:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "313130",
																	"id": 83,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "894:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_110_by_1",
																		"typeString": "int_const 110"
																	},
																	"value": "110"
																},
																"src": "880:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 90,
															"nodeType": "IfStatement",
															"src": "877:73:0",
															"trueBody": {
																"id": 89,
																"nodeType": "Block",
																"src": "898:52:0",
																"statements": [
																	{
																		"expression": {
																			"id": 87,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 85,
																				"name": "payoutPercent",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 33,
																				"src": "917:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "313130",
																				"id": 86,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "931:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_110_by_1",
																					"typeString": "int_const 110"
																				},
																				"value": "110"
																			},
																			"src": "917:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 88,
																		"nodeType": "ExpressionStatement",
																		"src": "917:17:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 91,
																	"name": "status",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 36,
																	"src": "964:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 95,
																			"name": "status",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 36,
																			"src": "985:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		},
																		{
																			"hexValue": "202d2056495020626f6e7573206170706c696564",
																			"id": 96,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "992:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_b90d5536f0f40eb92f24ca6ce2e2844ddcd971a91e11bda995de5ce4a350f3f2",
																				"typeString": "literal_string \" - VIP bonus applied\""
																			},
																			"value": " - VIP bonus applied"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_b90d5536f0f40eb92f24ca6ce2e2844ddcd971a91e11bda995de5ce4a350f3f2",
																				"typeString": "literal_string \" - VIP bonus applied\""
																			}
																		],
																		"expression": {
																			"id": 93,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "971:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 92,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "971:6:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "978:6:0",
																		"memberName": "concat",
																		"nodeType": "MemberAccess",
																		"src": "971:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																			"typeString": "function () pure returns (string memory)"
																		}
																	},
																	"id": 97,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "971:44:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"src": "964:51:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 99,
															"nodeType": "ExpressionStatement",
															"src": "964:51:0"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 102,
															"name": "payoutPercent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "1044:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 103,
															"name": "status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 36,
															"src": "1058:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"id": 104,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1043:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_string_memory_ptr_$",
														"typeString": "tuple(uint256,string memory)"
													}
												},
												"functionReturnParameters": 13,
												"id": 105,
												"nodeType": "Return",
												"src": "1037:28:0"
											}
										]
									},
									"functionSelector": "2d91e458",
									"id": 107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claim",
									"nameLocation": "113:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "delayHours",
												"nameLocation": "124:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "119:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "119:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "isVIP",
												"nameLocation": "140:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "135:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "135:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "dayAfterFlight",
												"nameLocation": "151:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "146:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "146:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "118:48:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "187:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 9,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "187:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "192:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 11,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "192:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "186:20:0"
									},
									"scope": 108,
									"src": "104:969:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 109,
							"src": "79:997:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "52:1024:0"
				},
				"id": 0
			}
		}
	}
}